# videobridge

{{- $ := set . "name" "jitsi-videobridge-udp" }}
kind: Service
apiVersion: v1
{{ include "jitsi.metadata" . }}
spec:
  type: NodePort 
  ports:
  - name: udp
    port: {{ .Values.jvb.udpPort }}
    nodePort: {{ .Values.jvb.udpPort }}
    targetPort: {{ .Values.jvb.udpPort }}
    protocol: UDP
  - name: tcp
    port: {{ .Values.jvb.tcpPort }}
    nodePort: {{ .Values.jvb.tcpPort }}
    targetPort: {{ .Values.jvb.tcpPort }}
{{ include "jitsi.service.selector" . | indent 2 }}

---

{{- $ := set . "name" "jitsi-videobridge" }}

kind: Ingress
apiVersion: extensions/v1beta1
{{ include "jitsi.metadata" . }}
  annotations:
{{- include "jitsi.ingress.annotations" . }}
spec:
{{- if .Values.tls.enabled }}
  tls:
  - hosts:
  {{- range .Values.domains }}
    - {{ . }}
  {{- end }}
    secretName: {{ .Values.tls.secretName }}
{{- end }}
  rules:
  {{ range .Values.domains -}}
  - host: {{ . }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ $.name }}
          servicePort: {{ $.Values.jvb.tcpPort }}
  {{ end }}

---

kind: Deployment
apiVersion: extensions/v1beta1
{{ include "jitsi.metadata" . }}
spec:
  replicas: 1
{{ include "jitsi.deployment.selector" . | indent 2 }}
  template:
{{ include "jitsi.metadata" . | indent 4 }}
    spec:
      volumes:
      - name: jitsi-videobridge-run
        configMap:
          name: jitsi-videobridge-run
          defaultMode: 0777
      containers:
      - name: {{ .name }}
        image: jitsi/jvb
        volumeMounts:
        - name: jitsi-videobridge-run
          mountPath: "/etc/services.d/jvb"
        env:
        - name: JICOFO_AUTH_USER
          value: {{ .Values.jicofo.auth.user }}
        - name: JVB_AUTH_USER
          value: {{ .Values.jvb.auth.user }}
        - name: JVB_AUTH_PASSWORD
          value: {{ .Values.jvb.auth.password }}
        - name: JVB_BREWERY_MUC
          value: {{ .Values.jvb.breweryMuc }}
        - name: JVB_STUN_SERVERS
          value: stun.l.google.com:19302,stun1.l.google.com:19302,stun2.l.google.com:19302
        - name: JVB_TCP_HARVESTER_DISABLED
          value: "true"
        - name: JVB_PORT
          value: {{ .Values.jvb.udpPort | quote }}
        - name: JVB_TCP_PORT
          value: {{ .Values.jvb.tcpPort | quote }}
        - name: TZ
          value: {{ .Values.timezone }}
        - name: XMPP_AUTH_DOMAIN
          value: {{ .Values.xmpp.authDomain }}
        - name: XMPP_INTERNAL_MUC_DOMAIN
          value: {{ .Values.xmpp.internalMucDomain }}
        - name: XMPP_SERVER
          value: {{ .Values.xmpp.host }}
        - name: LOCAL_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DOCKER_HOST_ADDRESS
          value: {{ .Values.jvb.publicIP }}
        ports:
        - containerPort: {{ .Values.jvb.udpPort }}
          protocol: UDP
        - containerPort: {{ .Values.jvb.tcpPort }}

---

{{- $ := set . "name" "jitsi-videobridge-run" }}
apiVersion: v1
kind: ConfigMap
{{ include "jitsi.metadata" . }}
data:
  run: |-
    #!/usr/bin/with-contenv bash
    
    JAVA_SYS_PROPS="-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/ -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=config -Djava.util.logging.config.file=/config/logging.properties"
    
    if [[ ! -z "$DOCKER_HOST_ADDRESS" ]]; then
        # do not use pod address!!
        #LOCAL_ADDRESS=$(hostname -I | cut -d " " -f1)
        JAVA_SYS_PROPS="$JAVA_SYS_PROPS -Dorg.ice4j.ice.harvest.NAT_HARVESTER_LOCAL_ADDRESS=${LOCAL_ADDRESS:?} -Dorg.ice4j.ice.harvest.NAT_HARVESTER_PUBLIC_ADDRESS=$DOCKER_HOST_ADDRESS"
    fi
    
    DAEMON=/usr/share/jitsi-videobridge/jvb.sh
    DEFAULT_DAEMON_OPTS="none"
    
    DAEMON_OPTS=${JVB_ENABLE_APIS:=$DEFAULT_DAEMON_OPTS}
    
    exec s6-setuidgid jvb /bin/bash -c "JAVA_SYS_PROPS=\"$JAVA_SYS_PROPS\" exec $DAEMON --apis=${DAEMON_OPTS}"


